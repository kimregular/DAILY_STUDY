// 자바스크립트는 항상 동기식으로 처리한다.
// 즉, 한번에 코드 한줄씨 차례대로 실행된다는 의미이다.
// 병렬처리 안 된다.

// setTimeout 같이 비동기식으로 처리되는 함수도 있긴하다.
// 이런 함수들은 잠시 대기되고 다음 줄이 먼저 실행된다.

// 그러면 순차적으로 실행하고 싶은 경우 어떡해?
// -> 콜백함수를 사용한다.

function f1(f) {
    console.log(1);
    f();
}

function f2() {
    console.log(2);
}

f1(f2);

// f1()
// f2()
// 이런식으로 코딩이 되어 있으면 뭐가 먼저 시작될지 알 수 없다.
// 그래서 콜백함수를 사용한다.
// f1(f2)
// 이런식으로 코딩이 되면 순차적으로 실행이 된다.

// 콜백함수 패턴은 문제가 있다.
// 콜백함수가 너무 많은 경우 콜백지옥이 펼쳐진다.
// 가독성이 떨어지고 들여쓰기가 증가해서 맘이 불편해짐
// 이 문제를 해결하기 위한 방법이 있으니 바로
// promise 이다.